> createTestDatabase

> scalikejdbcGenEcho programmers
-$ exists src/main/scala/app/models/Programmers.scala
-$ exists src/test/scala/app/models/ProgrammersSpec.scala
> scalikejdbcGenEcho programmers Programmer
-$ exists src/main/scala/app/models/Programmer.scala
-$ exists src/test/scala/app/models/ProgrammerSpec.scala

> scalikejdbcGenForce programmers
$ exists src/main/scala/app/models/Programmers.scala
$ exists src/test/scala/app/models/ProgrammersSpec.scala
> scalikejdbcGenForce programmers Programmer
$ exists src/main/scala/app/models/Programmer.scala
$ exists src/test/scala/app/models/ProgrammerSpec.scala

$ sleep 1500
> scalikejdbcGenForce programmers
$ newer src/main/scala/app/models/Programmers.scala src/main/scala/app/models/Programmer.scala
> + compile
> + test:compile
> + testOnly app.models.ProgrammersTest

> set (scalikejdbc.mapper.SbtKeys.scalikejdbcGeneratorSettings in Compile) ~= {_.copy(template ="interpolation")}
> scalikejdbcGenEcho programmers
> scalikejdbcGenForce programmers
> + test:compile
> + testOnly app.models.ProgrammersTest

> set (scalikejdbc.mapper.SbtKeys.scalikejdbcGeneratorSettings in Compile) ~= {_.copy(testTemplate ="specs2unit")}
> scalikejdbcGenEcho programmers
> scalikejdbcGenForce programmers
> + test:compile
> + testOnly app.models.ProgrammersTest
> set (scalikejdbc.mapper.SbtKeys.scalikejdbcGeneratorSettings in Compile) ~= {_.copy(template ="queryDsl")}
> scalikejdbcGenEcho programmers
> scalikejdbcGenForce programmers
> + test:compile
> + testOnly app.models.ProgrammersTest

> set (scalikejdbc.mapper.SbtKeys.scalikejdbcGeneratorSettings in Compile) ~= {_.copy(testTemplate ="specs2acceptance")}
> scalikejdbcGenEcho programmers
> scalikejdbcGenForce programmers
> + test:compile
> + testOnly app.models.ProgrammersTest
> set (scalikejdbc.mapper.SbtKeys.scalikejdbcGeneratorSettings in Compile) ~= {_.copy(template ="interpolation")}
> scalikejdbcGenEcho programmers
> scalikejdbcGenForce programmers
> + test:compile
> + testOnly app.models.ProgrammersTest


> set (scalikejdbc.mapper.SbtKeys.scalikejdbcGeneratorSettings in Compile) ~= {_.copy(autoConstruct = true)}
> scalikejdbcGenEcho programmers
> scalikejdbcGenForce programmers
> + test:compile
> + testOnly app.models.ProgrammersTest

> set (scalikejdbc.mapper.SbtKeys.scalikejdbcGeneratorSettings in Compile) ~= {_.copy(defaultAutoSession = false)}
> scalikejdbcGenEcho programmers
> scalikejdbcGenForce programmers
> + test:compile
> + testOnly app.models.ProgrammersTest

> set (scalikejdbc.mapper.SbtKeys.scalikejdbcGeneratorSettings in Compile) ~= {_.copy(template ="invalid template name")}
-> scalikejdbcGenEcho programmers
-> scalikejdbcGenForce programmers

> generateCodeForIssue339
> compile
